{"extVersion":"1.28.27","name":"copypaste","icon":"riGlobalLine","table":[],"version":"1.28.27","drawflow":{"edges":[{"data":{},"events":{},"id":"vueflow__edge-Lj4uF6KevyfQR18_MaJxnLj4uF6KevyfQR18_MaJxn-output-1-hhqls7uhhqls7u-input-1","markerEnd":"arrowclosed","selectable":true,"source":"Lj4uF6KevyfQR18_MaJxn","sourceHandle":"Lj4uF6KevyfQR18_MaJxn-output-1","sourceX":312,"sourceY":604.5,"target":"hhqls7u","targetHandle":"hhqls7u-input-1","targetX":415,"targetY":581,"type":"custom","updatable":true},{"data":{},"events":{},"id":"vueflow__edge-hhqls7uhhqls7u-output-1-ehqomqfehqomqf-input-1","markerEnd":"arrowclosed","selectable":true,"source":"hhqls7u","sourceHandle":"hhqls7u-output-1","sourceX":647,"sourceY":581,"target":"ehqomqf","targetHandle":"ehqomqf-input-1","targetX":733,"targetY":562,"type":"custom","updatable":true},{"class":"connected-edges","data":{},"events":{},"id":"vueflow__edge-ehqomqfehqomqf-output-1-d09lpk4d09lpk4-input-1","markerEnd":"arrowclosed","selectable":true,"source":"ehqomqf","sourceHandle":"ehqomqf-output-1","sourceX":965,"sourceY":562,"target":"d09lpk4","targetHandle":"d09lpk4-input-1","targetX":1038,"targetY":545,"type":"custom","updatable":true},{"class":"connected-edges","data":{},"events":{},"id":"vueflow__edge-d09lpk4d09lpk4-output-1-1oihqrm1oihqrm-input-1","markerEnd":"arrowclosed","selectable":true,"source":"d09lpk4","sourceHandle":"d09lpk4-output-1","sourceX":1270,"sourceY":545,"target":"1oihqrm","targetHandle":"1oihqrm-input-1","targetX":1421,"targetY":566,"type":"custom","updatable":true}],"nodes":[{"data":{"activeInInput":false,"contextMenuName":"","contextTypes":[],"date":"","days":[],"delay":5,"description":"","disableBlock":false,"interval":60,"isUrlRegex":false,"observeElement":{"baseElOptions":{"attributeFilter":[],"attributes":false,"characterData":false,"childList":true,"subtree":false},"baseSelector":"","matchPattern":"","selector":"","targetOptions":{"attributeFilter":[],"attributes":false,"characterData":false,"childList":true,"subtree":false}},"parameters":[],"preferParamsInTab":false,"shortcut":"","time":"00:00","type":"manual","url":""},"events":{},"id":"Lj4uF6KevyfQR18_MaJxn","label":"trigger","position":{"x":100,"y":568.5},"type":"BlockBasic"},{"data":{"activeTab":true,"createIfNoMatch":true,"description":"","disableBlock":false,"findTabBy":"match-patterns","matchPattern":"https://www.w3schools.com/howto/howto_js_copy_clipboard.asp","tabIndex":0,"tabTitle":"","url":"https://www.w3schools.com/howto/howto_js_copy_clipboard.asp"},"events":{},"id":"hhqls7u","label":"switch-tab","position":{"x":435,"y":545},"type":"BlockBasic"},{"data":{"description":"","disableBlock":false,"findBy":"cssSelector","markEl":false,"multiple":false,"selector":"button[onclick=\"myFunction()\"]","waitForSelector":false,"waitSelectorTimeout":5000},"events":{},"id":"ehqomqf","label":"event-click","position":{"x":753,"y":526},"type":"BlockBasic"},{"data":{"description":"","disableBlock":false,"iconUrl":"","imageUrl":"","message":"{{variables@clip}}","title":"Copied Text Is"},"events":{},"id":"1oihqrm","label":"notification","position":{"x":1441,"y":530},"type":"BlockBasic"},{"data":{"assignVariable":true,"copySelectedText":false,"dataColumn":"","dataToCopy":"","description":"","disableBlock":false,"saveData":false,"type":"get","variableName":"clip"},"events":{},"id":"d09lpk4","label":"clipboard","position":{"x":1058,"y":509},"type":"BlockBasic"},{"data":{"color":"white","disableBlock":false,"drawing":false,"fontSize":"regular","height":300,"note":"`Click Element` will copy text.\n\n\n`Clipboard` > `Get clipboard data` + Assign to variable\nThat'll make variable which contains value of your clipboard\n\n\n`Notification` I'm just using to display what was copied.","width":466},"events":{},"id":"86h8xcw","label":"note","position":{"x":623,"y":26.799999999999997},"type":"BlockNote"}],"position":[-24,322.2],"viewport":{"x":-24,"y":322.2,"zoom":1},"zoom":1},"settings":{"blockDelay":0,"debugMode":false,"defaultColumnName":"column","execContext":"popup","executedBlockOnWeb":false,"inputAutocomplete":true,"insertDefaultColumn":false,"notification":true,"onError":"stop-workflow","publicId":"","restartTimes":3,"reuseLastState":false,"saveLog":true},"globalData":"{\n\t\"key\": \"value\"\n}","description":"","includedWorkflows":{}}